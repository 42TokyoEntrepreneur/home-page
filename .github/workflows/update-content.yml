name: Update Hugo Content

on:
  schedule:
    - cron: "2 4 * * *"
  workflow_dispatch:

jobs:
  update-content:
    runs-on: ubuntu-latest

    steps:
      - name: Check out Hugo repository
        uses: actions/checkout@v3

      - name: Fetch Project Repositories
        id: fetch_projects
        env:
          GITHUB_PAT: ${{ secrets.PAT }}
        run: |
          api_response=$(curl -s -H "Authorization: token $GITHUB_PAT" \
                          -H "Accept: application/vnd.github+json" \
                          https://api.github.com/orgs/42TokyoEntrepreneur/repos?per_page=100)

          repos=$(echo "$api_response" | jq -r '.[] | select(.name | contains("project")) | .name')
          echo "repos=$repos" >> $GITHUB_OUTPUT

      - name: Clone and Copy Markdown files
        env:
          GITHUB_PAT: ${{ secrets.PAT }}
        run: |
          for repo in ${{ fromJson(steps.fetch_projects.outputs.repos) }}; do
            git clone https://$GITHUB_ACTOR:${{ secrets.PAT }}@github.com/42TokyoEntrepreneur/$repo.git /tmp/$repo || continue
            if [ -d /tmp/$repo/public ]; then
              mkdir -p content/project/$repo
              rsync -u /tmp/$repo/public/*.md content/project/$repo/ || true
            fi
          done

      - name: Commit and Push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          if ! git diff --quiet; then
            git add .
            git commit -m "Update content from project repositories"
            git push
          else
            echo "No changes to commit"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
