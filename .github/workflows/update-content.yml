name: Update Hugo Content

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  update-content:
    runs-on: ubuntu-latest

    steps:
      - name: Check out Hugo repository
        uses: actions/checkout@v3

      - name: Debug API Response
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Fetching API Response..."
          curl -H "Authorization: Bearer $GH_TOKEN" \
            https://api.github.com/orgs/42TokyoEntrepreneur/repos > response.json
          echo "API Response:"
          cat response.json

      - name: List repositories with "project" in their name
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Filtering repositories..."
          curl -H "Authorization: Bearer $GH_TOKEN" \
            https://api.github.com/orgs/42TokyoEntrepreneur/repos | \
            jq -r '.[] | select(.name | contains("project")) | .name' > repo_list.txt
          echo "Repositories found:"
          cat repo_list.txt

      - name: Check if repositories found
        run: |
          if [ ! -s repo_list.txt ]; then
            echo "No repositories matching 'project' found. Skipping..."
            exit 0
          fi

      - name: Clone and copy Markdown files
        run: |
          while read repo; do
            echo "Processing repository: $repo"
            git clone https://github.com/42TokyoEntrepreneur/$repo /tmp/$repo || {
              echo "Failed to clone $repo. Skipping..."
              continue
            }
            mkdir -p content/project/$repo
            cp /tmp/$repo/public/*.md content/project/$repo/ || {
              echo "No Markdown files found in $repo. Skipping..."
              continue
            }
          done < repo_list.txt

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Commit and Push changes
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "Changes detected. Committing..."
            git add .
            git commit -m "Update project content"
            git push
          else
            echo "No changes to commit."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
